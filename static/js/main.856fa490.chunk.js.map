{"version":3,"sources":["Component/Navbar.js","Component/TextEntry.js","Component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","detail","onClick","toggle","role","TextEntry","useState","text","setText","rows","value","onChange","e","console","log","target","style","backgroundColor","fontSize","color","t","toUpperCase","updateAlert","toLowerCase","length","Alert","alert","tabIndex","message","App","setMode","setAlert","document","body","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.856fa490.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">About</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">{props.detail}</a>\r\n              </li>\r\n            </ul>\r\n            \r\n            <div className={`form-check form-switch text-${props.mode===\"light\"?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggle} role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label\"  >Enable Dark Mode</label>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  )\r\n}\r\n","import { useState } from \"react\";\r\nimport React from 'react'\r\n// const test=()=>{\r\n//     if(text.length==0){\r\n//         return (\r\n\r\n//             <p>{text.split(\" \").length-1} no of words </p>\r\n//         );\r\n//      }\r\n//      else{\r\n//          return (\r\n//              <p>{text.split(\" \").length} no of words </p>\r\n//          );\r\n//      }\r\n// }\r\n\r\nexport default function TextEntry(props) {\r\n    const [text, setText] = useState(\"hello please enter the text\");\r\n    const convertToCapital=()=>{\r\n        console.log(\"uppercase\");\r\n        let t=text.toUpperCase();\r\n        setText(t);\r\n        props.updateAlert(\"CONVERTED TO UPPERCASE\" ,\"success\");\r\n        \r\n    }\r\n    const convertToSmall=()=>{\r\n        console.log(\"lowercase\");\r\n        let t=text.toLowerCase();\r\n        setText(t);\r\n        props.updateAlert(\"CONVERTED TO SMALLCASE\" ,\"success\");\r\n    }\r\n    const clearText=()=>{\r\n        console.log(\"clear\")\r\n        setText(\"\");\r\n        props.updateAlert(\"ENTRY CLEARED\" ,\"warning\");\r\n    }\r\n    const changeText=(e)=>{\r\n        console.log(\"change\");\r\n        setText(e.target.value);\r\n    }\r\n  \r\n    return (\r\n        <>\r\n        <div className=\"container my-4\">\r\n            <div className=\"mb-3\">\r\n                <label  className={`form-label text-${props.mode===\"light\"?'dark':'light'}`}>ENTER THE TEXT TO BE CONVERTED</label>\r\n                <textarea className=\"form-control\" id=\"text\" rows=\"10\" value={text} onChange={changeText}  style={{backgroundColor:props.mode===\"light\"?'black':'pink',fontSize:\"25px\",color:props.mode===\"light\"?\"white\":\"black\"}}></textarea>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={convertToCapital}>CAPITAL</button>\r\n            <button type=\"button\" className=\"btn btn-secondary mx-4\" onClick={convertToSmall}>SMALL</button>\r\n            <button type=\"button\" className=\"btn btn-danger\" onClick={clearText}>CLEAR</button>\r\n            <h2 className=\"my-4\" style={{color:props.mode===\"light\"?'green':'white'}}>{text.length>0?text:\"Enter the text\"}</h2>\r\n            <p style={{color:props.mode===\"light\"?'black':'pink',fontSize:\"30px\"}}>{text.length} no of characters </p>\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        <div>\r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\" tabIndex=\"0\">\r\n                <strong>{props.alert.type}</strong>    {props.alert.message}\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\r\nimport Navbar from './Component/Navbar'\r\nimport TextEntry from './Component/TextEntry';\r\nimport Alert from './Component/Alert';\r\n// import About from './Component/About';\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route,\r\n//   Link\r\n// } from \"react-router-dom\";\r\n\r\nimport { useState } from 'react';\r\nfunction App() {\r\n  const [mode, setMode] = useState(\"light\");\r\n  const toggleMode = () => {\r\n    console.log(\"toggling\");\r\n    if (mode === \"light\") {\r\n      setMode(\"dark\");\r\n      document.body.style.backgroundColor = \"#2F326D\";\r\n      document.title = \"React TEXT App-DARK MODE\";\r\n    }\r\n    else {\r\n      setMode(\"light\");\r\n      document.body.style.backgroundColor = \"white\";\r\n      document.title = \"React TEXT App\";\r\n    }\r\n  }\r\n\r\n  const [alert, setAlert] = useState({ message: \"hello i am praved\", type: \"success\" });\r\n  const setMessage = (message, type) => {\r\n    setAlert({\r\n      message: message,\r\n      type: type\r\n    });\r\n    setTimeout(() => {\r\n      setAlert({\r\n        message: \"\",\r\n        type: null\r\n      });\r\n    }, 2000);\r\n  }\r\n  return (\r\n    <>\r\n      <Navbar title=\"Praved Converter\" detail=\"this is string converter\" mode={mode} toggle={toggleMode} />\r\n      {/* <Alert alert={alert} />\r\n      <TextEntry mode={mode} updateAlert={setMessage} /> */}\r\n      {/* <About/> */}\r\n      {/* <Router> */}\r\n        {/* <Switch> */}\r\n          {/* <Route path=\"/About\"> */}\r\n            {/* <About /> */}\r\n          {/* </Route> */}\r\n          {/* <Route path=\"/\"> */}\r\n            {/* <Navbar title=\"Praved Converter\" detail=\"this is string converter\" mode={mode} toggle={toggleMode} /> */}\r\n            <Alert alert={alert} />\r\n            <TextEntry mode={mode} updateAlert={setMessage} />\r\n          {/* </Route> */}\r\n        {/* </Switch> */}\r\n      {/* </Router> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}